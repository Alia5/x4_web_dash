import { Duration } from 'luxon';
import { lowerFirst } from '../utils/utils';
import type { LowerFirst, UpperFirst } from '../utils/utiltypes';
import { api } from './apibase';
import type { ApiStats, Stats } from './types/stats';
import { X4BaseDate, xDistanceToKmNumber, xDurationStringToDuration, xStringToNumber } from '../utils/x4utils';

const basicPlayerCalls = {
    GetPlayerName: '' as string,
    GetPlayerFactionName: '' as string,
    GetPlayerID: 0 as number,
    GetPlayerOccupiedShipID: 0 as number,
    GetPlayerZoneID: 0 as number,
    GetPlayerMoney: 0 as number
} as const;

export const PlayerInfoApi = {
    ...Object.entries(basicPlayerCalls)
        .reduce((acc, [key, value]) => ({
            ...acc,
            [lowerFirst(key)]: typeof value === 'function' ?  value :(
                async () => ((await api.get<unknown>(key)).data)
            )
        }), {}) as {
        [key in LowerFirst<keyof typeof basicPlayerCalls>]:
        typeof basicPlayerCalls[UpperFirst<key>] extends () => unknown
            ? typeof basicPlayerCalls[UpperFirst<key>] 
            : () => Promise<typeof basicPlayerCalls[UpperFirst<key>]>
    },
    getStatistics: async () => {
        return FixStatTypes((await api.get<ApiStats>('/GetStats')).data);
    }
};

// (mostly) generated by Copilot
const FixStatTypes = (stats: ApiStats): Partial<Stats> => {
    if (Object.keys(stats || {}).length === 0) {
        return {} as Partial<Stats>;
    }
    return {
        dronesLaunched: xStringToNumber(stats.drones_launched),
        lasertowersLaunched: xStringToNumber(stats.lasertowers_launched),
        minesLaunched: xStringToNumber(stats.mines_launched),
        satellitesLaunched: xStringToNumber(stats.satellites_launched),
        navbeaconsLaunched: xStringToNumber(stats.navbeacons_launched),
        resourceprobesLaunched: xStringToNumber(stats.resourceprobes_launched),
        shipsDestroyed: xStringToNumber(stats.ships_destroyed),
        capshipsDestroyed: xStringToNumber(stats.capships_destroyed),
        modulesDestroyed: xStringToNumber(stats.modules_destroyed),
        xenonShipsDestroyed: xStringToNumber(stats.xenon_ships_destroyed),
        khaakShipsDestroyed: xStringToNumber(stats.khaak_ships_destroyed),
        turretsDestroyed: xStringToNumber(stats.turrets_destroyed),
        adsignsDestroyed: xStringToNumber(stats.adsigns_destroyed),
        pilotsBailed: xStringToNumber(stats.pilots_bailed),

        timePlayership: xDurationStringToDuration(stats.time_playership),

        shipsClaimed: xStringToNumber(stats.ships_claimed),

        timeLocalHighways: xDurationStringToDuration(stats.time_local_highways),

        timeSuperhighways: xDurationStringToDuration(stats.time_superhighways),

        timeAutopilot: xDurationStringToDuration(stats.time_autopilot),

        timeSpacesuit: xDurationStringToDuration(stats.time_spacesuit),

        timeSetaSaved: xDurationStringToDuration(stats.time_seta_saved),

        weaponModsInstalled: xStringToNumber(stats.weapon_mods_installed),

        timeModeScan: xDurationStringToDuration(stats.time_mode_scan),

        timeModeTravel: xDurationStringToDuration(stats.time_mode_travel),

        timeModeSeta: xDurationStringToDuration(stats.time_mode_seta),

        distanceSpace: xDistanceToKmNumber(stats.distance_space),

        distanceLocalHighways: xDistanceToKmNumber(stats.distance_local_highways),

        distanceSuperhighways: xDistanceToKmNumber(stats.distance_superhighways),

        distanceAutopilot: xDistanceToKmNumber(stats.distance_autopilot),

        distanceWalked: xDistanceToKmNumber(stats.distance_walked),
        gatesTraversed: xStringToNumber(stats.gates_traversed),
        acceleratorsTraversed: xStringToNumber(stats.accelerators_traversed),
        anomaliesTraversed: xStringToNumber(stats.anomalies_traversed),
        sectorsDiscovered: xStringToNumber(stats.sectors_discovered),
        clustersDiscovered: xStringToNumber(stats.clusters_discovered),
        gatesDiscovered: xStringToNumber(stats.gates_discovered),
        acceleratorsDiscovered: xStringToNumber(stats.accelerators_discovered),
        anomaliesDiscovered: xStringToNumber(stats.anomalies_discovered),
        dropsCollected: xStringToNumber(stats.drops_collected),
        terraformingDeliveryDronesBuilt: xStringToNumber(stats.terraforming_delivery_drones_built),
        illegalDropsCollected: xStringToNumber(stats.illegal_drops_collected),
        cratesOpened: xStringToNumber(stats.crates_opened),
        lockboxesOpened: xStringToNumber(stats.lockboxes_opened),

        terraformingPersonnelTrainedInGroups: xStringToNumber(stats.terraforming_personnel_trained_in_groups),

        terraformingPersonnelTrainedIndividually: xStringToNumber(stats.terraforming_personnel_trained_individually),

        savegamesLoaded: xStringToNumber(stats.savegames_loaded),

        tradeRank: stats.trade_rank,

        fightRank: stats.fight_rank,

        terraformingPayout: xStringToNumber(stats.terraforming_payout),

        terraformingExpenses: xStringToNumber(stats.terraforming_expenses),

        terraformingDeliveryDronesLost: xStringToNumber(stats.terraforming_delivery_drones_lost),

        terraformingMissionsCompleted: xStringToNumber(stats.terraforming_missions_completed),

        terraformingComplicationsSuffered: xStringToNumber(stats.terraforming_complications_suffered),

        terraformingProjectsFailed: xStringToNumber(stats.terraforming_projects_failed),

        terraformingProjectsCompleted: xStringToNumber(stats.terraforming_projects_completed),

        passengerMissionsCompleted: xStringToNumber(stats.passenger_missions_completed),

        missionsCompleted: xStringToNumber(stats.missions_completed),

        missionsAccepted: xStringToNumber(stats.missions_accepted),

        staffHired: xStringToNumber(stats.staff_hired),

        clothingModsInstalled: xStringToNumber(stats.clothing_mods_installed),

        paintModsInstalled: xStringToNumber(stats.paint_mods_installed),
        maxFactionRelation: xStringToNumber(stats.max_faction_relation),
        shipModsInstalled: xStringToNumber(stats.ship_mods_installed),

        moneyPlayer: xStringToNumber(stats.money_player),

        engineModsInstalled: xStringToNumber(stats.engine_mods_installed),

        shipsOwned: xStringToNumber(stats.ships_owned),

        shieldModsInstalled: xStringToNumber(stats.shield_mods_installed),

        stationsOwned: xStringToNumber(stats.stations_owned),

        discountsUnlocked: xStringToNumber(stats.discounts_unlocked),

        commissionsUnlocked: xStringToNumber(stats.commissions_unlocked),

        tradesExecuted: xStringToNumber(stats.trades_executed),

        tradeValue: xStringToNumber(stats.trade_value),

        objectsRecycled: xStringToNumber(stats.objects_recycled),

        timeTotal: xDurationStringToDuration(stats.time_total),

        stationsConstructed: xStringToNumber(stats.stations_constructed),

        timeModeScanLongrange: xDurationStringToDuration(stats.time_mode_scan_longrange),

        stationModulesConstructed: xStringToNumber(stats.station_modules_constructed),

        bulletsFired: xStringToNumber(stats.bullets_fired),

        bulletsHit: xStringToNumber(stats.bullets_hit),

        bulletsHitPercent: xStringToNumber(stats.bullets_hit_percent),

        bulletsPerHour:xStringToNumber(stats.bullets_per_hour),

        missilesFired: xStringToNumber(stats.missiles_fired),

        timeBoosting: xDurationStringToDuration(stats.time_boosting),

        missilesHitPercent:xStringToNumber(stats.missiles_hit_percent),

        missilesPerHour: xStringToNumber(stats.missiles_per_hour),

        countermeasuresLaunched: xStringToNumber(stats.countermeasures_launched)

    };
};